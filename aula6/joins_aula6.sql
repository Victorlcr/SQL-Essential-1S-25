-- üè¢ Define o banco de dados a ser utilizado
USE Empresa;

-- üìã Visualiza todos os registros da tabela Pedidos
SELECT * FROM Pedidos;

-- üìã Visualiza todos os registros da tabela DetalhesPed (detalhes dos pedidos)
SELECT * FROM DetalhesPed;

-- üîó INNER JOIN (jun√ß√£o interna)
-- Traz apenas os registros que t√™m correspond√™ncia nas duas tabelas.
-- Neste exemplo, estamos juntando as tabelas Pedidos e DetalhesPed com base na coluna NumPed (n√∫mero do pedido).

SELECT *
FROM Pedidos p                -- Tabela da ESQUERDA (a que aparece primeiro)
INNER JOIN DetalhesPed d      -- Tabela da DIREITA (a que vem depois do JOIN)
    ON p.NumPed = d.NumPed    -- Condi√ß√£o de jun√ß√£o (campo comum)
							  -- o p logo ap√≥s Pedidos √© um apelido dado a tabela Pedidos, esta t√©cnica √© utilizada para deixar a consulta mais leg√≠vel, a partir do momento que eu defino um apelido, este passa a ser o nome da coluna.				
							  
-- üß† Explica√ß√£o:
-- Apenas os pedidos que possuem pelo menos um detalhe na tabela DetalhesPed aparecer√£o no resultado.
-- Se houver um pedido na tabela Pedidos sem correspond√™ncia em DetalhesPed, ele ser√° ignorado.

-- üîé Exemplo pr√°tico:
-- Imagine que o pedido 101 est√° na tabela Pedidos, mas n√£o tem nenhum detalhe na DetalhesPed.
-- Com INNER JOIN, o pedido 101 **n√£o aparecer√°** no resultado.

SELECT p.NumPed, p.CodCli, d.CodProd, d.Preco -- Retorna colunas espec√≠ficas de cada tabela, perceba que para referenciar a tabela da qual a coluna faz parte, se utiliza a seguinte estrutura: NomeDaTabela.NomeDaColuna, no caso usamos ApelidoDaTabela.NomeDaColuna
FROM Pedidos p
INNER JOIN DetalhesPed d ON p.NumPed = d.NumPed
WHERE d.Preco > 50 

----------------------------------------------------------------------------------------

-- üîó LEFT JOIN (jun√ß√£o externa √† esquerda)
-- Traz todos os registros da TABELA DA ESQUERDA (Pedidos), com ou sem correspond√™ncia na tabela da direita (DetalhesPed).
-- Se n√£o houver correspond√™ncia, os campos da tabela da direita vir√£o como NULL.

SELECT * 
FROM Pedidos p                -- Tabela da ESQUERDA
LEFT JOIN DetalhesPed d       -- Tabela da DIREITA
    ON p.NumPed = d.NumPed    -- Condi√ß√£o de jun√ß√£o

-- üß† Explica√ß√£o:
-- Todos os pedidos da tabela Pedidos aparecer√£o no resultado.
-- Se algum pedido **n√£o tiver detalhes**, os campos correspondentes da tabela DetalhesPed aparecer√£o como NULL.

-- üîé Exemplo pr√°tico:
-- Se o pedido 101 est√° na tabela Pedidos, mas n√£o tem detalhes na DetalhesPed:
-- ‚Üí O pedido 101 aparecer√° com os campos da DetalhesPed em branco (NULL).

-- üí° Dica importante:
-- "Tabela da esquerda" = a tabela que vem antes do JOIN.
-- "Tabela da direita" = a tabela que vem depois do JOIN.
-- Isso √© importante porque no LEFT JOIN a prioridade √© para manter **todos os registros da tabela da esquerda**.

-- Exerc√≠cios

-- 1 - Retorne o Nome e Pa√≠s do cliente, o NumPed e o DataPed do pedido que ele fez

-- 2 - Quantos pedidos foram feitos para cada pa√≠s da tabela clientes? (Dica: Utilize a agrega√ß√£o correta (COUNT(), SUM(), AVG(), MIN(), MAX()) e GROUP BY).

-- 3 - Retorne todos os dados dos clientes que n√£o fizeram nenhum pedido (Dica: Utilize WHERE para retornar os clientes onde o CodCli da tabela Pedidos IS NULL)
